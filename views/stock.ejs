<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Market Trends</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <style>
        /* Basic styling */
        .line {
            fill: none;
            stroke: steelblue;
            stroke-width: 2px;
        }
    </style>
</head>
<body>
<h2>Stock Market Trends Visualization</h2>
<div id="chart"></div>

<script>
    // Assuming you have an array of stock data
    var stockData = [
        { date: "2023-01-01", price: 100 },
        { date: "2023-01-02", price: 107 },
        // Add more data points...
    ];

    // Parse the date / time
    var parseTime = d3.timeParse("%Y-%m-%d");

    // Format the data
    stockData.forEach(function(d) {
        d.date = parseTime(d.date);
        d.price = +d.price;
    });

    // Set the dimensions and margins of the graph
    var margin = {top: 20, right: 20, bottom: 30, left: 50},
        width = 960 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

    // Set the ranges
    var x = d3.scaleTime().range([0, width]);
    var y = d3.scaleLinear().range([height, 0]);

    // Define the line
    var valueline = d3.line()
        .x(function(d) { return x(d.date); })
        .y(function(d) { return y(d.price); });

    // Append the svg object to the body of the page
    // Appends a 'group' element to 'svg'
    // Moves the 'group' element to the top left margin
    var svg = d3.select("#chart").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");

    // Scale the range of the data
    x.domain(d3.extent(stockData, function(d) { return d.date; }));
    y.domain([0, d3.max(stockData, function(d) { return d.price; })]);

    // Add the valueline path.
    svg.append("path")
        .data([stockData])
        .attr("class", "line")
        .attr("d", valueline);

    // Add the X Axis
    svg.append("g")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x));

    // Add the Y Axis
    svg.append("g")
        .call(d3.axisLeft(y));
</script>
</body>
</html>
